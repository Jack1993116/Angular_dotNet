// -----------------------------------------------------------------------------------------------------
// @ Custom color maps for Fuse
// -----------------------------------------------------------------------------------------------------
$fuse-white: (
    500: white,
    contrast: (
        500: $dark-primary-text
    )
);

$fuse-black: (
    500: black,
    contrast: (
        500: $light-primary-text,
    )
);

$fuse-navy: (
    50: #ECECEE,
    100: #C5C6CB,
    200: #9EA1A9,
    300: #7D818C,
    400: #5C616F,
    500: #3C4252,
    600: #353A48,
    700: #2D323E,
    800: #262933,
    900: #1E2129,
    A100: #C5C6CB,
    A200: #9EA1A9,
    A400: #5C616F,
    A700: #2D323E,
    contrast: (
        50: $dark-primary-text,
        100: $dark-primary-text,
        200: $dark-primary-text,
        300: $light-primary-text,
        400: $light-primary-text,
        500: $light-primary-text,
        600: $light-primary-text,
        700: $light-primary-text,
        800: $light-primary-text,
        900: $light-primary-text,
        A100: $dark-primary-text,
        A200: $light-primary-text,
        A400: $light-primary-text,
        A700: $light-primary-text,
    )
);

// Generate Fuse color classes for custom palettes
$custom_palettes: (
    fuse-white: $fuse-white,
    fuse-black: $fuse-black,
    fuse-navy: $fuse-navy
);

@include fuse-color-classes($custom_palettes);

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

// Angular Material typography
$typography: mat-typography-config(
    $font-family: 'Muli, Helvetica Neue, Arial, sans-serif',
    $title: mat-typography-level(20px, 32px, 600),
    $body-2: mat-typography-level(14px, 24px, 600),
    $button: mat-typography-level(14px, 14px, 600),
    $input: mat-typography-level(16px, 1.125, 400) // line-height must be unitless !!!
);

// Setup the typography
@include angular-material-typography($typography);

// -----------------------------------------------------------------------------------------------------
// @ Component theming
// -----------------------------------------------------------------------------------------------------

// Import app and page component themes here to enable theming for them
@import "src/app/layout/components/chat-panel/chat-panel.theme";
@import "src/app/layout/components/toolbar/toolbar.theme";

// Define a mixin for easier access
@mixin components-theme($theme) {

    // Layout components
    @include chat-panel-theme($theme);
    @include toolbar-theme($theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define the default theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($fuse-navy);
$default-accent-palette: mat-palette($mat-light-blue, 600, 400, 700);
$default-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$theme: mat-light-theme($default-primary-palette, $default-accent-palette, $default-warn-palette);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default {

    // Create an Angular Material theme from the $theme map
    @include angular-material-theme($theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($theme);

    // Apply the theme to the user components
    @include components-theme($theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $default-primary-palette,
        accent: $default-accent-palette,
        warn: $default-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a yellow light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$yellow-light-theme-primary-palette: mat-palette($fuse-navy, 600, 400, 700);
$yellow-light-theme-accent-palette: mat-palette($mat-yellow, 600, 400, 700);
$yellow-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$yellow-light-theme: mat-light-theme($yellow-light-theme-primary-palette, $yellow-light-theme-accent-palette, $yellow-light-theme-warn-palette);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-yellow-light {

    // Generate the Angular Material theme
    @include angular-material-theme($yellow-light-theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($yellow-light-theme);

    // Apply the theme to the user components
    @include components-theme($yellow-light-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $yellow-light-theme-primary-palette,
        accent: $yellow-light-theme-accent-palette,
        warn: $yellow-light-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a blue-gray dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-gray-dark-theme-primary-palette: mat-palette($mat-blue);
$blue-gray-dark-theme-accent-palette: mat-palette($mat-blue-gray);
$blue-gray-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-gray-dark-theme: mat-dark-theme($blue-gray-dark-theme-primary-palette, $blue-gray-dark-theme-accent-palette, $blue-gray-dark-theme-warn-palette);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-gray-dark {

    // Generate the Angular Material theme
    @include angular-material-theme($blue-gray-dark-theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($blue-gray-dark-theme);

    // Apply the theme to the user components
    @include components-theme($blue-gray-dark-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $blue-gray-dark-theme-primary-palette,
        accent: $blue-gray-dark-theme-accent-palette,
        warn: $blue-gray-dark-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a pink dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$pink-dark-theme-primary-palette: mat-palette($mat-pink);
$pink-dark-theme-accent-palette: mat-palette($mat-pink);
$pink-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$pink-dark-theme: mat-dark-theme($pink-dark-theme-primary-palette, $pink-dark-theme-accent-palette, $pink-dark-theme-warn-palette);

// Add ".theme-pink-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-pink-dark {

    // Generate the Angular Material theme
    @include angular-material-theme($pink-dark-theme);

    // Apply the theme to the Fuse Core
    @include fuse-core-theme($pink-dark-theme);

    // Apply the theme to the user components
    @include components-theme($pink-dark-theme);

    // Generate Fuse color classes for primary, accent and warn colors
    $palettes: (
        primary: $pink-dark-theme-primary-palette,
        accent: $pink-dark-theme-accent-palette,
        warn: $pink-dark-theme-warn-palette
    );

    @include fuse-color-classes($palettes);
}

@font-face {
    font-family: 'Proxima Nova';
    src:
      url('assets/fonts/ProximaNova-Regular.otf') format("opentype");
}

.cursor {
    cursor: url('assets/images/mac-osx-arrow-cursor2.png'), auto;
}

.header-row {
    height: 7vh;
    min-height: 40px;
    align-items: center;
    margin: 15px 0;
}

table.mat-table {
    tr.mat-header-row {
        th {

            // text-align: center;
            line-height: 15px;
            color: #8b8b8b;
            font-family: "Proxima Nova", sans-serif;
            font-size: calc(10px + 0.5vh);
            font-weight: bold;
            white-space: nowrap;
            width: 2vw;

        }
    }
    tr.mat-row {
        td {
            // text-align: center;
            // padding-right: 3px !important;
            // padding-left: 3px !important;
            line-height: 40px !important;
            font-size: calc(10px + 0.5vh) !important;
            color: #8b8b8b !important;
            font-family: "Proxima Nova", sans-serif !important;
            font-weight: 500 !important;

            .mat-form-field {
                text-align: center;
            }
        }
    }
}

.loading-shade, .save-spinner {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 56px;
    right: 0;
    background: rgba(0, 0, 0, 0.15);
    z-index: 100;
    display: flex;
    align-items: center;
    justify-content: center;
}

.panel.mat-select-panel {
    color:#11223e;
    font-family:"Proxima Nova", sans-serif;
    font-size:16px;
    font-style:normal;
    font-weight:bold;
    margin-top: 17px;
}

mat-chip-list .mat-chip-list-wrapper mat-chip.mat-standard-chip.styled-chip {

    font-size: calc(10px + 0.6vh);
    padding: 2vh 1vw;
    font-family: "Proxima Nova", sans-serif;
    font-style: normal;
    font-weight: 600;
    color: white;   
    background-color: #3C4252;

    mat-icon {
        margin: 0px 0.2vw;
    }
    
    &.theme-chip {
        background: #de990f;
    }
}

.external-content {
        
    margin: 0px 3% auto;
    width: 100%;

    .content {
        height: 100%;
    }
}

.mat-icon-button:enabled {
    .gold-fg {
        color:#de990f; 
    }
}

.holding-container-v1 {

    position: relative;

    &.dialog {
        min-height: auto;
    }

    .table-button {

        position: absolute;
        z-index: 11;
        bottom: 10px;
        left: 30px;

        mat-icon {
            height: 45px;
            width: 45px;
            font-size: 45px;
            bottom: 10px;
            position: relative;
        }
    }

    .table-container {

        overflow: auto;
        max-height: 73vh;

        mat-select {

            display: inline-flex;
            width: auto;
            
        }

        table {
            
            width: 100%;
            
            th {
                font-weight: bold;
                font-size: 12px;
                white-space: nowrap;
                
                @media (min-width: 800px) {
                    font-size: 14px;
                }

                @media (min-width: 1200px) {
                    font-size: 16px;
                }
                
            }

            th, td {
                padding-right: 0.5vw;
            }
          
            // th:last-of-type {
            //     padding-right: 24px;
            // }

            // th:first-of-type {
            //     padding-left: 24px;
            // }

            &.accent-row {
                tr.mat-row:hover {
                    background-color: #4fc3f7!important;
                }
            }

            tr.mat-row {
                height: 36px;
            }

            .mat-cell a {
                display: flex;
                font-size: 18px;
            }

            .button-narrow {
                max-width: 1vw;
            }

            button:disabled {
                mat-icon {
                    color: grey !important;
                }
            }

            img {
                margin-right: 3px;
            }
        }
    }

    mat-paginator {
        bottom: 0px;
        position: sticky;
        z-index: 10;
    }
}

form.mat-card.form-with-lines {

    background: whitesmoke;
    box-shadow: 0px 0px 0px 0px !important;
    
    .form-header  {

        padding: 1.8vmin;
        margin: 1px 1px 1.8vh 1px;
        overflow: hidden;
        background: white;

        .mat-form-field {

            padding: 0px 10px;

            .mat-form-field-wrapper {

                padding-bottom: 0.7em;

                .mat-form-field-infix {

                    border-top-width: 0.2em;

                    input, mat-select {
                        color:#11223e;
                        font-family:"Proxima Nova", sans-serif;
                        font-size: calc(8px + 0.85vh);
                        font-style:normal;
                        font-weight:bold;
                        padding-top: 3px;
                        color: black;
                    }
                    
                    .mat-select-value-text, .mat-select-arrow {
                        color: black;
                    }

                }
                
                .mat-form-field-label-wrapper {
                    
                    top: -1.2vh;
                
                    .mat-form-field-label {

                        color:#8b8b8b;
                        font-family:"Proxima Nova", sans-serif;
                        font-size:calc(10px + 1.5vh);
                        font-style:normal;
                        font-weight:500;
                        
                    }

                    label.mat-form-field-label.mat-form-field-empty {
                        top: 0.8vh;
                        font-size: calc(8px + 1.2vmin);
                    }
                }
                
            }
        
            &.mat-form-field-should-float {
                .mat-form-field-label-wrapper {
                    label.mat-form-field-label.mat-form-field-empty {
                        top: 2.8vh;
                    }
                }
            }

            .mat-form-field-subscript-wrapper {
                margin-top: 0px;
            }
        }
        
        .mat-checkbox {
            align-self: center;
            color:#8b8b8b;
            font-family:"Proxima Nova", sans-serif;
            font-size:calc(10px + 1.3vh);
            font-style:normal;
            font-weight:500;

        }
    }

}

mat-tab-group.flat-lable {

    margin: 1px;

    .mat-tab-header {

        background: #de990f;
        
        .mat-tab-label {

            height: 6vh;
            color: white;
            font-family: "Proxima Nova", sans-serif;
            font-size: 1.1em;
            font-style: normal;
            font-weight: 600;
            opacity: 1;
            

            &.mat-tab-label-active {
                color: black;
            }

            .mat-tab-label-content {
                .mat-icon {
                    margin: 0 0.4vw;
                }
            }
        }

    }

    .holding-container-v1 {
        width: 100%;
    }
}